#!/usr/bin/env bash

#----------------------------------------------------
# Exit if the last command failed, indicating 
# that there was a build failure
#----------------------------------------------------
checkCmdSuccess() {
    CMD_RESULT=$?
    if [ $CMD_RESULT != 0 ]; then
        echo "Build Failed."
        exit $CMD_RESULT 
    fi
}


# ClojureScript
cd planck-cljs
echo "### Building ClojureScript"
script/build
checkCmdSuccess
cd ..

# Remove any leftover macros files so that they will not be bundled
# We need them to be compiled by the 1st stage binary
rm -f planck-cljs/out/planck/*macros*
rm -f planck-cljs/out/planck/pprint/*macros*
rm -f planck-cljs/out/clojure/template*macros*
rm -f planck-cljs/out/cljs/test*macros*
rm -f planck-cljs/out/cljs/spec*macros*
rm -f planck-cljs/out/cljs/spec/impl/gen*macros*
rm -f planck-cljs/out/planck/from/io/aviso/*macros*

echo "### Bundling 1st Stage ClojureScript"
cd planck-cljs
script/bundle-c
checkCmdSuccess
cd ..

if [ ! -e planck-c/linenoise.h ] || [ planck/linenoise/linenoise.h -nt planck-c/linenoise.h ] || 
   [ ! -e planck-c/linenoise.c ] || [ planck/linenoise/linenoise.c -nt planck-c/linenoise.c ]
then
   echo "### Copying over linenoise source"
   cp planck/linenoise/linenoise.h planck-c
   cp planck/linenoise/linenoise.c planck-c
fi

echo "### Building 1st Stage Binary"
cd planck-c
mkdir -p build
cd build
if [ ! -e Makefile ]
then
   export CC=clang
   cmake ..
fi
make
cd ../..
checkCmdSuccess

echo "### Compiling Macro Namespaces"
mkdir -p planck-cljs/out/macros-tmp
planck-c/build/planck -sk planck-cljs/out/macros-tmp -e "(require-macros 'planck.repl 'planck.core 'planck.shell 'planck.from.io.aviso.ansi 'clojure.template 'cljs.spec 'cljs.spec.impl.gen 'cljs.test)"

mv planck-cljs/out/macros-tmp/planck_SLASH_repl\$macros.js planck-cljs/out/planck/repl\$macros.js
mv planck-cljs/out/macros-tmp/planck_SLASH_repl\$macros.cache.json planck-cljs/out/planck/repl\$macros.cache.json
mv planck-cljs/out/macros-tmp/planck_SLASH_repl\$macros.js.map.json planck-cljs/out/planck/repl\$macros.js.map.json
mv planck-cljs/out/macros-tmp/planck_SLASH_core\$macros.js planck-cljs/out/planck/core\$macros.js
mv planck-cljs/out/macros-tmp/planck_SLASH_core\$macros.cache.json planck-cljs/out/planck/core\$macros.cache.json
mv planck-cljs/out/macros-tmp/planck_SLASH_core\$macros.js.map.json planck-cljs/out/planck/core\$macros.js.map.json
mv planck-cljs/out/macros-tmp/planck_SLASH_shell\$macros.js planck-cljs/out/planck/shell\$macros.js
mv planck-cljs/out/macros-tmp/planck_SLASH_shell\$macros.cache.json planck-cljs/out/planck/shell\$macros.cache.json
mv planck-cljs/out/macros-tmp/planck_SLASH_shell\$macros.js.map.json planck-cljs/out/planck/shell\$macros.js.map.json
mv planck-cljs/out/macros-tmp/planck_SLASH_from_SLASH_io_SLASH_aviso_SLASH_ansi\$macros.js planck-cljs/out/planck/from/io/aviso/ansi\$macros.js
mv planck-cljs/out/macros-tmp/planck_SLASH_from_SLASH_io_SLASH_aviso_SLASH_ansi\$macros.cache.json planck-cljs/out/planck/from/io/aviso/ansi\$macros.cache.json
mv planck-cljs/out/macros-tmp/planck_SLASH_from_SLASH_io_SLASH_aviso_SLASH_ansi\$macros.js.map.json planck-cljs/out/planck/from/io/aviso/ansi\$macros.js.map.json
mv planck-cljs/out/macros-tmp/clojure_SLASH_template\$macros.js planck-cljs/out/clojure/template\$macros.js
mv planck-cljs/out/macros-tmp/clojure_SLASH_template\$macros.cache.json planck-cljs/out/clojure/template\$macros.cache.json
mv planck-cljs/out/macros-tmp/clojure_SLASH_template\$macros.js.map.json planck-cljs/out/clojure/template\$macros.js.map.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_test\$macros.js planck-cljs/out/cljs/test\$macros.js
mv planck-cljs/out/macros-tmp/cljs_SLASH_test\$macros.cache.json planck-cljs/out/cljs/test\$macros.cache.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_test\$macros.js.map.json planck-cljs/out/planck/test\$macros.js.map.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec\$macros.js planck-cljs/out/cljs/spec\$macros.js
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec\$macros.cache.json planck-cljs/out/cljs/spec\$macros.cache.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec\$macros.js.map.json planck-cljs/out/cljs/spec\$macros.js.map.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec_SLASH_impl_SLASH_gen\$macros.js planck-cljs/out/cljs/spec/impl/gen\$macros.js
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec_SLASH_impl_SLASH_gen\$macros.cache.json planck-cljs/out/cljs/spec/impl/gen\$macros.cache.json
mv planck-cljs/out/macros-tmp/cljs_SLASH_spec_SLASH_impl_SLASH_gen\$macros.js.map.json planck-cljs/out/cljs/spec/impl/gen\$macros.js.map.json

rm -rf planck-cljs/out/macros-tmp

echo "### Bundling ClojureScript"
cd planck-cljs
script/bundle-c
checkCmdSuccess
cd ..

echo "### Building 2nd Stage Binary"
cd planck-c/build
make
cd ../..
checkCmdSuccess

echo "Binary located at $PWD/planck-c/build/planck"
